ARG BASE_IMAGE="cern/alma8-base"
FROM ${BASE_IMAGE}

COPY packages /tmp/

RUN yum -y clean metadata \
    && yum install -y dnf-plugins-core \
    && yum -y install epel-release python39 python39-pip python39-devel boost-python3 jq \
    && xargs yum -y install < /tmp/packages \
    && yum -y clean all 
    #&& rm -f /tmp/packages \
    #&& yum clean all

RUN ln -s `which python3.9` /usr/local/bin/python3

RUN python3.9 -m pip install -U pip setuptools wheel

RUN curl -fsSL https://rpm.nodesource.com/setup_16.x | bash -

RUN yum install https://rpm.nodesource.com/pub_16.x/nodistro/repo/nodesource-release-nodistro-1.noarch.rpm -y \
   && yum install nodejs -y --setopt=nodesource-nodejs.module_hotfixes=1 
RUN yum install -y  nodejs npm && npm install -g typescript yarn

WORKDIR /

# Install jupyterlab
RUN python3.9 -m pip install --no-cache-dir \
    idna \
    importlib-metadata \
    ipympl \
    ipywidgets \
    jedi-language-server \
    jupyterlab-system-monitor \
    jupyterlab==3.6.6 \
    jupyterhub==3.1.1 \
    ipykernel \
    nbdime \
    notebook \
    pycurl \
    dask[complete]==2023.7.1 \
    dask[dataframe]==2023.7.1 \
    bokeh \
    click \
    dask-jobqueue \
    ipython \
    ipywidgets \
    jupyter-server-proxy \
    numpy \
    pandas \
    toolz


ENV TINI_VERSION v0.19.0
ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /bin/tini
RUN chmod +x /bin/tini

## Install Rucio plugin
#RUN yum install -y voms-clients-java \
#    && cd /usr/local/ \
#    && git clone https://github.com/rucio/jupyterlab-extension \
#    && cd jupyterlab-extension \
#    && sed -i -e 's/\r$/\n/' docker/configure.sh \
#    && python3 -m pip install -e . \
#    && jupyter serverextension enable --py rucio_jupyterlab --sys-prefix \
#    && jupyter labextension link . --dev-build=False \
#    && jupyter lab clean -y 

# Install DASK labextension
WORKDIR /usr/local/share/comp-dev-cms-ita
RUN git clone --branch v2.0.2-update https://github.com/ttedeschi/dask-labextension.git
#RUN git clone https://github.com/comp-dev-cms-ita/dask-labextension.git
COPY labextension.yaml /usr/local/share/comp-dev-cms-ita/dask-labextension/dask_labextension/

WORKDIR /usr/local/share/comp-dev-cms-ita/dask-labextension
RUN jlpm \
    && jlpm build \
    && npm cache clean --force
RUN python3.9 -m pip install .

# Build jupyter lab stuff in release mode
# RUN /bin/bash -c "jupyter lab build --dev-build=False --minimize=True"

WORKDIR /usr/local/share/comp-dev-cms-ita

# Install DASK remote jobqueue
RUN git clone --branch v2.0.5 https://github.com/comp-dev-cms-ita/dask-remote-jobqueue
RUN cd /usr/local/share/comp-dev-cms-ita/dask-remote-jobqueue \
    && python3.9 -m pip install -U .

RUN mkdir -p /root/.ipython


COPY ./condor_config /etc/condor/condor_config
COPY ./htc-demo  /opt/workspace/htc-example
COPY ./jupyterhub-singleuser-cc7.sh /usr/local/bin/jupyterhub-singleuser.sh
COPY ./jupyterhub-singleuser-cc7 /usr/local/bin/jupyterhub-singleuser
COPY ./spawn.sh /root/.init/spawn.sh
RUN chmod +x /usr/local/bin/jupyterhub-singleuser.sh
RUN chmod +x /usr/local/bin/jupyterhub-singleuser && chmod +x /root/.init/spawn.sh

#RUN git clone --branch v1.0.18 https://github.com/comp-dev-cms-ita/jupyterlab-custom-kernel \
#    && cd jupyterlab-custom-kernel \
#    && jlpm \
#   && jlpm build \
#    && npm cache clean --force \
#    && python3.9 -m pip install -U --user . \
#    && jupyter kernelspec install ./singularity-kernel \
#    && jupyter labextension install --overwrite .

# COPY kernel-cc7.json /root/.local/share/jupyter/kernels/python3/kernel.json 

COPY ./ca.crt /ca.crt

WORKDIR /etc/yum.repos.d/
RUN wget http://repository.egi.eu/sw/production/cas/1/current/repo-files/egi-trustanchors.repo
RUN wget http://linuxsoft.cern.ch/wlcg/wlcg-centos8.repo
WORKDIR /etc/pki/rpm-gpg
RUN wget http://linuxsoft.cern.ch/wlcg/RPM-GPG-KEY-wlcg

RUN yum search voms
#RUN yum install -y wlcg-voms-cms apptainer voms-clients-cpp ca-policy-lcg
RUN yum install -y  apptainer voms-clients-cpp ca-policy-lcg


RUN mkdir -p /.init \
    && wget https://github.com/DODAS-TS/sts-wire/releases/download/v2.0.0/sts-wire_linux -O /.init/sts-wire \
    && chmod +x /.init/sts-wire

# Install tailwind css
RUN jupyter labextension install jupyterlab-tailwind-theme

RUN jupyter lab build

RUN mkdir -p ~/.jupyter/lab/settings && \
    echo '{"@jupyterlab/apputils-extension:themes": {"theme":"Tailwind Light"}}'> ~/.jupyter/lab/settings/overrides.json

RUN yum install -y https://research.cs.wisc.edu/htcondor/repo/9.1/htcondor-release-current.el8.noarch.rpm

RUN sed -i 's/current/8.9/g' /etc/yum.repos.d/htcondor.repo

RUN yum install -y condor

WORKDIR /opt/workspace
